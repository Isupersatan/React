{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT0001\\\\Desktop\\\\React\\\\my-app\\\\src\\\\components\\\\products\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\nimport Products from './Product';\nimport Loader from './Loader';\nimport ErrorMsg from './ErrorMsg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductList() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  async function fetchAPI() {\n    setLoading(true);\n    try {\n      let res = await fetch('https://fakestoreapi.com/products');\n      if (!res.ok) throw new Error(\"Failed to fetch products\");\n      let data = await res.json();\n      setItems(data);\n    } catch (error) {\n      console.error(error);\n      setErrorMsg(\"Something went wrong while fetching products.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container-fluid mt-3\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }, this) : errorMsg ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        msg: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: items.length > 0 && items.map(item => /*#__PURE__*/_jsxDEV(Product, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 51\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ProductList, \"bW6vHWigbYT65mmkUlvCSrPTNr8=\");\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["Products","Loader","ErrorMsg","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductList","_s","items","setItems","useState","loading","setLoading","errorMsg","setErrorMsg","fetchAPI","res","fetch","ok","Error","data","json","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","msg","length","map","item","Product","id","_c","$RefreshReg$"],"sources":["C:/Users/KIIT0001/Desktop/React/my-app/src/components/products/ProductList.jsx"],"sourcesContent":["import Products from './Product';\r\nimport Loader from './Loader';\r\nimport ErrorMsg from './ErrorMsg';\r\n\r\nexport default function ProductList() {\r\n    const [items, setItems] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n    async function fetchAPI() {\r\n        setLoading(true);\r\n        try {\r\n            let res = await fetch('https://fakestoreapi.com/products');\r\n            if (!res.ok) throw new Error(\"Failed to fetch products\");\r\n            let data = await res.json();\r\n            setItems(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setErrorMsg(\"Something went wrong while fetching products.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className='container-fluid mt-3'>\r\n                {loading ? <Loader />\r\n                    : errorMsg ? (\r\n                        <ErrorMsg msg={errorMsg} />\r\n                    ) :\r\n                        <div className=\"row\">\r\n                            {items.length > 0 &&\r\n                                items.map(item => <Product item={item} key={item.id} />)}\r\n                        </div>}\r\n\r\n            </section>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE5C,eAAeK,QAAQA,CAAA,EAAG;IACtBH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,IAAII,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MAC1D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MACxD,IAAIC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC3BZ,QAAQ,CAACW,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBR,WAAW,CAAC,+CAA+C,CAAC;IAChE,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;EAEA,oBACIT,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACIrB,OAAA;MAASsB,SAAS,EAAC,sBAAsB;MAAAD,QAAA,EACpCb,OAAO,gBAAGR,OAAA,CAACH,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACfhB,QAAQ,gBACNV,OAAA,CAACF,QAAQ;QAAC6B,GAAG,EAAEjB;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE3B1B,OAAA;QAAKsB,SAAS,EAAC,KAAK;QAAAD,QAAA,EACfhB,KAAK,CAACuB,MAAM,GAAG,CAAC,IACbvB,KAAK,CAACwB,GAAG,CAACC,IAAI,iBAAI9B,OAAA,CAAC+B,OAAO;UAACD,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACE,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET;EAAC,gBACZ,CAAC;AAEX;AAACtB,EAAA,CAnCuBD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}